/usr/include/c++/14.2.1/bits/stl_vector.h: 993 - 1131
--------------------------------------------------------------------------------

993:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
[...]
1128:       operator[](size_type __n) _GLIBCXX_NOEXCEPT
1129:       {
1130: 	__glibcxx_requires_subscript(__n);
1131: 	return *(this->_M_impl._M_start + __n);
/usr/include/c++/14.2.1/bits/stl_iterator.h: 1068 - 1068
--------------------------------------------------------------------------------

1068:       : _M_current(__i) { }
/home/corentin/Documents/Cours/M2/CHPS0901/Projet_CHPS0901/sources/quadtree.cpp: 265 - 272
--------------------------------------------------------------------------------

265:     #pragma omp parallel for
266:     for (size_t i = 0; i < particles->size(); ++i) {
267:         Particle* particle = (*particles)[i];
268:         for (QuadTree* node : poOfSubtree[*rankMPI]) {
269:             double fx = 0.0, fy = 0.0;
270:             node->calculateForce(particle, fx, fy); // Déjà basé sur G*mass/d²
271:             localAccX[i] += fx; // fx contient l'accélération (pas besoin de diviser par mass)
272:             localAccY[i] += fy;
