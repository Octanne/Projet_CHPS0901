/usr/include/c++/14.2.1/bits/stl_vector.h: 99 - 1327
--------------------------------------------------------------------------------

99: 	: _M_start(), _M_finish(), _M_end_of_storage()
[...]
1327: 	--this->_M_impl._M_finish;
/usr/include/c++/14.2.1/bits/stl_iterator.h: 1068 - 1068
--------------------------------------------------------------------------------

1068:       : _M_current(__i) { }
/home/corentin/Documents/Cours/M2/CHPS0901/Projet_CHPS0901/sources/quadtree.cpp: 32 - 371
--------------------------------------------------------------------------------

32:     : particle(nullptr), isDivided(false), hasBody(false), width(width), weightBranch(weightBranch),
33:       originX(originX), originY(originY), northeast(nullptr), 
34:       northwest(nullptr), southeast(nullptr), southwest(nullptr) {
35:     this->particles = new std::vector<Particle*>();
[...]
326: QuadTree* QuadTree::getNode(double w, double ox, double oy, int weightBranch) {
327:     if (nodePool.empty()) {
328:         return new QuadTree(w, ox, oy, 0);
329:     }
330:     QuadTree* node = nodePool.back();
331:     nodePool.pop_back();
332:     node->reset(); // Clear children/particle
333:     node->width = w; node->originX = ox; node->originY = oy; node->weightBranch = weightBranch;
334:     return node;
335: }
[...]
348:     if (particle != nullptr && isDivided) {
349:         delete particle;
350: 
351:         northeast->reset();
352:         northwest->reset();
353:         southeast->reset();
354:         southwest->reset();
355:     }
356:     particle = nullptr;
357: 
358:     isDivided = false;
359:     hasBody = false;
360:     weightBranch = 0;
361:     width = 0;
362:     originX = 0;
363:     originY = 0;
364: 
365:     // We set the children to nullptr
366:     northeast = nullptr;
367:     northwest = nullptr;
368:     southeast = nullptr;
369:     southwest = nullptr;
370:     // particles = nullptr; // We do not delete the particles listes
371: }
